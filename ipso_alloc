#!/usr/bin/perl

use strict;
use warnings;
use lib './lib';
use Ipso;
use Text::ASCIITable;
use Data::Dumper;
use Getopt::Long::Descriptive;
use Switch;

my ($opt,$usage)=describe_options("%c  %o",
	['Action:'],
		["action"=>hidden=>{one_of=>[
			[ "add|a"    => "Add an allocation to a network block."],
			[ "list|l"   => "List allocations within a network block."],
			[ "delete|d" => "Delete an allocation."],
		]}],
	[],
	['Parameters:'],
		['block|b=s'  => 'Network block or ID to allocate in.'],
		['ip|i=s'     => 'First IP of the allocation.'],
		['count|c=n'  => 'Size in IPs of the allocation.'],
		['note|n=s'   => 'Some descriptive text for the allocation.'],
	[],
	['Other:'],
		['help|h' => 'Print help and usage.'],
	[],
	['Examples:'],
		["$0 -l"],
	[],
);

print($usage->text), exit if $opt->help;

my $action=$opt->action;
my $block=$opt->block || 'all';
my $ip=$opt->ip || '';
my $ipcount=$opt->count || 0;
my $note=$opt->note || '';

switch ($action){
	case 'add'    { addalloc();    }
	case 'list'   { listallocs();  }
	case 'delete' { deletealloc(); }
	default       { print "Error: Unknown or no action requested.\n"; exit; }
}

sub addalloc{
	print "Not yet implemented.\n";
}

sub listallocs{
	my $headingtext='';
	if ($block eq 'all'){
		$headingtext='Allocations in all IP blocks';
	}
	my %allocations=getAllocationInfo($block);
	my $key=(keys %allocations)[0];
	my $family=4;
	if (scalar keys %allocations==1){
		if (is_ipv6_cidr($allocations{$key}{ipblockfamily})){
			$family=6;
		}
	}
	if ($block ne 'all'){
		$headingtext="Allocations in IPv$family Block $allocations{$key}{ipblock}";
	}
	my $table = Text::ASCIITable->new({ headingText => "$headingtext" });
	$table->setCols('Alloc ID','Range','IP Count','Used (%)','Free (%)','Notes');
	foreach my $record (sort keys %allocations){
		my $firstip=$allocations{$record}{firstip};
		my $lastip=$allocations{$record}{lastip};
		my $ipcount=$allocations{$record}{ipcount};
		my $used=$allocations{$record}{used};
		$note=$allocations{$record}{note};
		my $free=$ipcount-$used;
		my $usedpcent='0';
		if ($used!=0){
			$usedpcent=sprintf("%.3g",$used/$ipcount*100);
		}
		my $freepcent=sprintf("%.3g",100-$usedpcent);
		$table->addRow($record,"$firstip - $lastip",$ipcount,"$used ($usedpcent%)","$free ($freepcent%)",$note);
	}
	print $table;
}

sub deleteallocs{
	print "Not yet implemented.\n";
}
